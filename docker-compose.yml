version: "3.8"

networks:
  internal:
    driver: bridge
    ipam:
      config:
        - subnet: 10.20.0.0/16
  proxy:
    external: true

services:
  db:
    image: postgres:17-alpine
    restart: always
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - internal
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7-alpine
    volumes:
      - redis:/data
    restart: always
    networks:
      - internal
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 10s

  onlyoffice:
    image: onlyoffice/documentserver:latest
    restart: always
    environment:
      - JWT_ENABLED=true
      - JWT_SECRET=${ONLYOFFICE_JWT_SECRET}
      - JWT_HEADER=Authorization
      - JWT_IN_BODY=true
      - ONLYOFFICE_HTTPS_HSTS_ENABLED=false
      - USE_UNAUTHORIZED_STORAGE=false
      - WOPI_ENABLED=true
      - REJECT_UNAUTHORIZED=false
    volumes:
      - onlyoffice_data:/var/www/onlyoffice/Data
      - onlyoffice_log:/var/log/onlyoffice
      - onlyoffice_lib:/var/lib/onlyoffice
      - onlyoffice_db:/var/lib/postgresql
    networks:
      - internal
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.${PROJECT_NAME}-office.rule=Host(`${OFFICE_DOMAIN}`)
      - traefik.http.routers.${PROJECT_NAME}-office.entrypoints=websecure
      - traefik.http.routers.${PROJECT_NAME}-office.tls=true
      - traefik.http.routers.${PROJECT_NAME}-office.tls.certresolver=myresolver
      - traefik.http.services.${PROJECT_NAME}-office.loadbalancer.server.port=80
      - traefik.http.routers.${PROJECT_NAME}-office-http.rule=Host(`${OFFICE_DOMAIN}`)
      - traefik.http.routers.${PROJECT_NAME}-office-http.entrypoints=web
      - traefik.http.routers.${PROJECT_NAME}-office-http.middlewares=${PROJECT_NAME}-office-redirect
      - traefik.http.middlewares.${PROJECT_NAME}-office-headers.headers.customRequestHeaders.X-Forwarded-Proto=https
      - traefik.http.middlewares.${PROJECT_NAME}-office-headers.headers.customRequestHeaders.X-Forwarded-For=$${remoteip}
      - traefik.http.middlewares.${PROJECT_NAME}-office-headers.headers.customResponseHeaders.X-Frame-Options=SAMEORIGIN
      - traefik.http.middlewares.${PROJECT_NAME}-office-headers.headers.customResponseHeaders.Content-Security-Policy=frame-ancestors 'self' https://${NEXTCLOUD_DOMAIN}
      - traefik.http.middlewares.${PROJECT_NAME}-office-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.${PROJECT_NAME}-office-redirect.redirectscheme.permanent=true
      - traefik.http.routers.${PROJECT_NAME}-office.middlewares=${PROJECT_NAME}-office-headers
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/healthcheck"] # OnlyOffice поддерживает healthcheck эндпоинт
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  cloud:
    image: nextcloud:fpm-alpine
    restart: always
    volumes:
      - nextcloud:/var/www/html
      - ./nextcloud.ini:/usr/local/etc/php/conf.d/nextcloud.ini:ro
      - ./php.ini:/usr/local/etc/php-fpm.d/www.conf:ro
    environment:
      - REDIS_HOST=redis
      - REDIS_HOST_PORT=6379
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXTCLOUD_DOMAIN}
      - PHP_MEMORY_LIMIT=2048M
      - PHP_OPCACHE_ENABLE=1
      - PHP_OPCACHE_ENABLE_CLI=1
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      onlyoffice:
        condition: service_healthy
    networks:
      - internal
    healthcheck:
      test: [ "CMD-SHELL", "su -s /bin/sh www-data -c 'php /var/www/html/occ status | grep -q true'" ]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 15s

  nginx:
    image: nginx:alpine
    restart: always
    volumes:
      - nextcloud:/var/www/html:ro
      - logs:/var/log/nginx
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./nextcloud.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      cloud:
        condition: service_healthy
    labels:
      - traefik.enable=true
      - traefik.http.routers.${PROJECT_NAME}.rule=Host(`${NEXTCLOUD_DOMAIN}`)
      - traefik.http.services.${PROJECT_NAME}.loadbalancer.server.port=80
      - traefik.http.middlewares.${PROJECT_NAME}_redirect.redirectregex.regex=^https://www\.(.*)
      - traefik.http.middlewares.${PROJECT_NAME}_redirect.redirectregex.replacement=https://$${1}
      - traefik.http.middlewares.${PROJECT_NAME}_redirect.redirectregex.permanent=true
      - traefik.http.middlewares.${PROJECT_NAME}-header.headers.frameDeny=true
      - traefik.http.middlewares.${PROJECT_NAME}-header.headers.contentTypeNosniff=true
      - traefik.http.middlewares.${PROJECT_NAME}-header.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.${PROJECT_NAME}-header.headers.stsPreload=true
      - traefik.http.middlewares.${PROJECT_NAME}-header.headers.stsSeconds=31536000
      - traefik.http.middlewares.${PROJECT_NAME}-header.headers.referrerPolicy=same-origin
      - traefik.http.middlewares.${PROJECT_NAME}-header.headers.browserXssFilter=true
      - traefik.http.middlewares.${PROJECT_NAME}-header.headers.customRequestHeaders.X-Forwarded-Proto=https
      - traefik.http.middlewares.${PROJECT_NAME}-header.headers.customFrameOptionsValue=SAMEORIGIN
      - traefik.http.middlewares.${PROJECT_NAME}-well-known.redirectregex.regex=^https://(.*)/.well-known/(card|cal)dav
      - traefik.http.middlewares.${PROJECT_NAME}-well-known.redirectregex.replacement=https://$${1}/remote.php/dav
      - traefik.http.middlewares.${PROJECT_NAME}-well-known.redirectregex.permanent=true
      - traefik.http.routers.${PROJECT_NAME}.middlewares=${PROJECT_NAME}_redirect,${PROJECT_NAME}-header,${PROJECT_NAME}-well-known,ratelimit,inflightreq,circuitbreaker,crowdsec-bouncer
    networks:
      - internal
      - proxy

  cron:
    image: nextcloud:fpm-alpine
    restart: always
    volumes:
      - nextcloud:/var/www/html
      - ./nextcloud.ini:/usr/local/etc/php/conf.d/nextcloud.ini:ro
      - ./php.ini:/usr/local/etc/php-fpm.d/www.conf:ro
    entrypoint: /cron.sh
    environment:
      - REDIS_HOST=redis
      - REDIS_HOST_PORT=6379
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db
    depends_on:
      - nginx
    networks:
      - internal

volumes:
  db:
  nextcloud:
  logs:
  redis:
  onlyoffice_data:
  onlyoffice_log:
  onlyoffice_lib:
  onlyoffice_db:
